name: "Set Status and Run Command (Composite)"
description: "Sets a status on HEAD, checks out code, runs a command or workflow, updates status based on success/failure"
author: "Your Name"

inputs:
  github-token:
    description: "GitHub token for setting the status"
    required: true
  status-name:
    description: "The context name for the status"
    required: false
  command:
    description: "The shell command to run (mutually exclusive with workflow-path)"
    required: false
  workflow-path:
    description: "Path to the workflow file to run (mutually exclusive with command)"
    required: false
  workflow-inputs:
    description: 'JSON string of workflow inputs (e.g. ''{"sha":"abc123","env":"prod"}'')'
    required: false
  checkout-path:
    description: "The path to checkout the repository to"
    required: false
  checkout-fetch-depth:
    description: "Number of commits to fetch. 0 indicates all history for all branches and tags"
    required: false
    default: "1"

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set status to pending
      if: ${{ inputs.status-name != '' }}
      shell: bash
      run: |
        gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
          -f state="pending" \
          -f context="${{ inputs.status-name }}" \
          -f description="Command is running..."
      env:
        GH_TOKEN: ${{ inputs.github-token }}

    - name: Run the command or workflow
      id: run_command
      if: ${{ inputs.command != '' || inputs.workflow-path != '' }}
      shell: bash
      run: |
        set -o pipefail
        if [ -n "${{ inputs.command }}" ]; then
          echo "Executing command: ${{ inputs.command }}"
          eval "${{ inputs.command }}"
        elif [ -n "${{ inputs.workflow-path }}" ]; then
          echo "Executing workflow: ${{ inputs.workflow-path }}"
          if [ -n "${{ inputs.workflow-inputs }}" ]; then
            echo "${{ inputs.workflow-inputs }}" | gh workflow run "${{ inputs.workflow-path }}" --json
          else
            gh workflow run "${{ inputs.workflow-path }}"
          fi
        else
          echo "Error: Either command or workflow-path must be provided"
          exit 1
        fi

    - name: Set status to success
      if: success() && ${{ inputs.status-name != '' }}
      shell: bash
      run: |
        gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
          -f state="success" \
          -f context="${{ inputs.status-name }}" \
          -f description="Command succeeded!"
      env:
        GH_TOKEN: ${{ inputs.github-token }}

    - name: Set status to failure
      if: failure() && ${{ inputs.status-name != '' }}
      shell: bash
      run: |
        gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
          -f state="failure" \
          -f context="${{ inputs.status-name }}" \
          -f description="Command failed!"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
